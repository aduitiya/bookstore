name: API Tests + Allure + Pages

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      BASE_URL: http://127.0.0.1:8000

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: maven

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install API deps (root or server/)
        run: |
          if [ -f server/requirements.txt ]; then
            pip install -r server/requirements.txt
          elif [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "No requirements.txt found; skipping."
          fi

      - name: Start FastAPI (background)
        run: |
          if [ -f server/main.py ]; then
            (cd server && nohup uvicorn main:app --host 127.0.0.1 --port 8000 >/dev/null 2>&1 &)
          elif [ -f main.py ]; then
            nohup uvicorn main:app --host 127.0.0.1 --port 8000 >/dev/null 2>&1 &
          else
            echo "No FastAPI main.py found; assuming API is mocked or not needed."
          fi

      - name: Wait for /health (up to ~90s)
        run: |
          for i in {1..45}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" "$BASE_URL/health" || true)
            if [ "$code" = "200" ]; then
              echo "API is healthy"; exit 0
            fi
            sleep 2
          done
          echo "API didn't become healthy in time"; exit 1

      - name: Run Maven tests (TestNG)
        run: |
          mvn -B clean test \
            -DbaseUrl="$BASE_URL" \
            -DEMAIL="${{ secrets.EMAIL }}" \
            -DPASSWORD="${{ secrets.PASSWORD }}"

      # --- Allure outputs ---

      - name: Generate Allure HTML (via Maven plugin)
        # Generates to target/site/allure-maven-plugin/
        run: |
          mvn -B io.qameta.allure:allure-maven:2.12.0:report || true

      - name: Upload Allure results (raw)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: target/allure-results
          if-no-files-found: ignore

      - name: Upload Allure HTML (static site)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-html
          path: target/site/allure-maven-plugin
          if-no-files-found: ignore

      - name: Upload surefire reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: target/surefire-reports
          if-no-files-found: ignore

  publish-pages:
    needs: test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download Allure HTML
        uses: actions/download-artifact@v4
        with:
          name: allure-html
          path: _site

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    needs: publish-pages
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
